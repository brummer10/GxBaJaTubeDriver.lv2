
// bajatubedriver_table generated by DK/circ_table_gen.py -- do not modify manually

 // variables used
 // --sig_max  9.000000
 // --table_div  9.000000
 // --table_op  2.000000

struct tablebajatubedriver { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct tablebajatubedriver_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator tablebajatubedriver&() const { return *(tablebajatubedriver*)this; }
};

 static tablebajatubedriver_imp<200> bajatubedriver_table __rt_data = {
	0,0.411475,44.2222,200, {
	0.000000000000,0.006395170504,0.012717516501,0.018967484953,0.025145529984,
	0.031252112449,0.037287699521,0.043252764286,0.049147785350,0.054973246465,
	0.060729636158,0.066417447379,0.072037177155,0.077589326260,0.083074398893,
	0.088492902365,0.093845346800,0.099132244849,0.104354111402,0.109511463325,
	0.114604819196,0.119634699051,0.124601624148,0.129506116726,0.134348699783,
	0.139129896863,0.143850231838,0.148510228716,0.153110411443,0.157651303719,
	0.162133428819,0.166557309423,0.170923467450,0.175232423899,0.179484698702,
	0.183680810576,0.187821276884,0.191906613505,0.195937334702,0.199913953008,
	0.203836979103,0.207706921705,0.211524287470,0.215289580883,0.219003304168,
	0.222665957198,0.226278037401,0.229840039689,0.233352456368,0.236815777077,
	0.240230488707,0.243597075343,0.246916018199,0.250187795559,0.253412882723,
	0.256591751957,0.259724872442,0.262812710232,0.265855728207,0.268854386042,
	0.271809140164,0.274720443722,0.277588746554,0.280414495162,0.283198132684,
	0.285940098874,0.288640830075,0.291300759207,0.293920315747,0.296499925715,
	0.299040011663,0.301540992663,0.304003284299,0.306427298660,0.308813444333,
	0.311162126405,0.313473746455,0.315748702556,0.317987389278,0.320190197685,
	0.322357515346,0.324489726334,0.326587211235,0.328650347154,0.330679507727,
	0.332675063126,0.334637380071,0.336566821844,0.338463748299,0.340328515877,
	0.342161477617,0.343962983177,0.345733378843,0.347473007552,0.349182208901,
	0.350861319175,0.352510671358,0.354130595154,0.355721417006,0.357283460118,
	0.358817044475,0.360322486863,0.361800100889,0.363250197006,0.364673082535,
	0.366069061683,0.367438435573,0.368781502259,0.370098556757,0.371389891064,
	0.372655794181,0.373896552142,0.375112448035,0.376303762023,0.377470771377,
	0.378613750492,0.379732970918,0.380828701381,0.381901207810,0.382950753360,
	0.383977598440,0.384982000736,0.385964215234,0.386924494252,0.387863087456,
	0.388780241893,0.389676202011,0.390551209685,0.391405504244,0.392239322495,
	0.393052898745,0.393846464829,0.394620250135,0.395374481624,0.396109383861,
	0.396825179034,0.397522086979,0.398200325209,0.398860108930,0.399501651072,
	0.400125162307,0.400730851078,0.401318923618,0.401889583975,0.402443034035,
	0.402979473545,0.403499100135,0.404002109342,0.404488694630,0.404959047417,
	0.405413357090,0.405851811032,0.406274594645,0.406681891364,0.407073882688,
	0.407450748192,0.407812665556,0.408159810580,0.408492357206,0.408810477540,
	0.409114341871,0.409404118690,0.409679974713,0.409942074894,0.410190582454,
	0.410425658891,0.410647464005,0.410856155913,0.411051891070,0.411234824286,
	0.411405108747,0.411562896028,0.411708336115,0.411841577422,0.411962766804,
	0.412072049583,0.412169569556,0.412255469017,0.412329888772,0.412392968158,
	0.412444845053,0.412485655900,0.412515535716,0.412534618114,0.412543035312,
	0.412540918154,0.412528396123,0.412505597353,0.412472648650,0.412429675501,
	0.412376802093,0.412314151322,0.412241844813,0.412160002929,0.412068744789,
	0.411968188277,0.411858450060,0.411739645599,0.411611889162,0.411475293837
	}
};

double always_inline bajatubedriverclip(double x) {
    double f = fabs(x);
    f = f * bajatubedriver_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = bajatubedriver_table.data[0];
    } else if (i >= bajatubedriver_table.size-1) {
        f = bajatubedriver_table.data[bajatubedriver_table.size-1];
    } else {
    f -= i;
    f = bajatubedriver_table.data[i]*(1-f) + bajatubedriver_table.data[i+1]*f;
    }
    return copysign(f, x);
}

